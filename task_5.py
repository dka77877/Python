# Вариант 1
my_list = [7, 5, 3, 3, 2]
num = int(input('Введите целое число: '))

if num <= my_list[len(my_list) - 1]:
    my_list.append(num)
else:
    my_index = 0
    while num <= my_list[my_index]:
        my_index += 1
    my_list.insert(my_index, num)
print(my_list)

# Вариант 2 (sort). Прошу объяснить на вебинаре критерии выбора правильного варианта.
# Одногруппники говорят, что  .sort более ресурсоёмкий, а Лутц пишет (стр.142 4-е издание):
# "Главное правило, которому желательно следовать при использовании языка
# Python – это простота и удобочитаемость программного кода, а проблему про-
# изводительности следует рассматривать во вторую очередь, уже после того,
# как будет создана работоспособная программа и когда проблема производи-
# тельности программы действительно заслуживает того, чтобы на нее обрати-
# ли внимание.

# my_list = [7, 5, 3, 3, 2]
# num = int(input('Введите целое число: '))
# my_list.append(num)
# my_list.sort(reverse=True)
# print(my_list)
